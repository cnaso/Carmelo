<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Carmelo.Word"
                    xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF">

    <!-- Hoverless button -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window menu button -->
    <Style TargetType="{x:Type Button}" x:Key="Button.WindowMenu" BasedOn="{StaticResource Button.Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="7" />
    </Style>

    <!-- Window control button -->
    <Style TargetType="{x:Type Button}" x:Key="Button.WindowState" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Color.DarkGrayBrush}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Color.RegularGrayBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True" >
                <Setter Property="Padding" Value="7 9 9 7" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Close button -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Close" BasedOn="{StaticResource Button.WindowState}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Crimson" />
                <Setter Property="Foreground" Value="{StaticResource Color.WhiteBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Orange button -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Orange" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource Color.OrangeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource Color.WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.Large}" />
        <Setter Property="FontFamily" Value="{StaticResource Lato.Regular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="0 10" />
        <Setter Property="local:IsBusyProperty.Value" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            CornerRadius="10" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}" 
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}" 
                                       FontSize="{TemplateBinding FontSize}" 
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Margin="{TemplateBinding Padding}" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:InverseBooleanToVisibilityValueConverter}}"/>
                            <fa:ImageAwesome Icon="CircleOutlineNotch" 
                                            Spin="True"
                                            Height="30"
                                            Width="30"
                                            Foreground="{StaticResource Color.WhiteBrush}"
                                            Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:InverseBooleanToVisibilityValueConverter}, ConverterParameter=True}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource Color.Blue}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource Color.Orange}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Color.RegularGray}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Transparent button -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Transparent" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Color.WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.Regular}" />
        <Setter Property="FontFamily" Value="{StaticResource Lato.Regular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="0 10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            CornerRadius="10" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <TextBlock Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}" 
                                   FontSize="{TemplateBinding FontSize}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.OrangeBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Color.BlackBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon button -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Icon" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource Color.BlueBrush}" />
        <Setter Property="Foreground" Value="{StaticResource Color.WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.Large}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="Padding" Value="20" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding Content}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Focusable="False"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource Color.LightBlue}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource Color.Blue}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="Button.IsPressed" Value="True" >
                            <Setter Property="Padding" Value="18 22 22 18" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Color.RegularGray}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>